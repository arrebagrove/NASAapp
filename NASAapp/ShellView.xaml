<Page x:Class="NASAapp.ShellView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:local="using:NASAapp"
      xmlns:models="using:NASAapp.Models"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
      mc:Ignorable="d">

    <Page.Resources>
        <DataTemplate x:Key="DefaultTemplate" x:DataType="models:MenuItem">
            <Grid Width="240" Height="48">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="48"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <FontIcon Grid.Column="0"
                          Glyph="{x:Bind Path=Glyph, Mode=OneWay}"
                          Foreground="White"/>
                <TextBlock Grid.Column="1"
                           Text="{x:Bind Path=Label, Mode=OneWay}"
                           FontSize="16"
                           VerticalAlignment="Center"
                           Foreground="White"/>
            </Grid>
        </DataTemplate>
    </Page.Resources>
    
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="LargeWindow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1008" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="HamburgerMenuControl.DisplayMode"
                                Value="CompactInline" />
                        <Setter Target="HamburgerMenuControl.IsPaneOpen"
                                Value="True" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="MediumWindow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="641" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="HamburgerMenuControl.DisplayMode"
                                Value="CompactOverlay" />
                        <Setter Target="HamburgerMenuControl.IsPaneOpen"
                                Value="False" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="SmallWindow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="HamburgerMenuControl.DisplayMode"
                                Value="Overlay" />
                        <Setter Target="HamburgerMenuControl.IsPaneOpen"
                                Value="False" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <controls:HamburgerMenu x:Name="HamburgerMenuControl"
                                PaneBackground="Gray"
                                Foreground="{ThemeResource SystemControlForegroundAccentBrush}"
                                ItemTemplate="{StaticResource DefaultTemplate}"
                                ItemClick="OnMenuItemClick"
                                OptionsItemTemplate="{StaticResource DefaultTemplate}"
                                OptionsItemClick="OnMenuItemClick">
            <Frame x:Name="RootFrame"
                   x:FieldModifier="Public"/>
        </controls:HamburgerMenu>
    </Grid>
</Page>
